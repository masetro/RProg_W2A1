## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
# c_cases <- rbind(c_cases, corr(ob_data$sulfate,ob_data$nitrate))
print(cor(ob_data$sulfate,ob_data$nitrate,na.rm=TRUE))
}
}
# are the completely observed cases above the threshold
# if so, compute the correlation
c_cases
}
corr(threshold = 1000)
debugSource('~/Google Drive/School/Coursera/R Programming/Week 2/Assignment/RProg_W2A1/corr.R')
corr(threshold = 1000)
ob_data$sulfate
ob_data
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
# c_cases <- rbind(c_cases, corr(ob_data$sulfate,ob_data$nitrate))
print(cor(ob_data$sulfate,ob_data$nitrate,use=complete.obs))
}
}
# are the completely observed cases above the threshold
# if so, compute the correlation
c_cases
}
corr(threshold = 1000)
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
# c_cases <- rbind(c_cases, corr(ob_data$sulfate,ob_data$nitrate))
print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
# are the completely observed cases above the threshold
# if so, compute the correlation
c_cases
}
corr(threshold = 1000)
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
c_cases <- rbind(c_cases, cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
#print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
# are the completely observed cases above the threshold
# if so, compute the correlation
c_cases
}
corr(threshold = 1000)
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
c_cases <- rbind(c_cases, cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
#print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
c_cases
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
c_cases <- cbind(c_cases, cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
#print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
c_cases
}
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
c_cases <- cbind(c_cases, cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
#print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
c_cases
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory="specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
c_cases <- vector()
# get a list of all the files in the directory
my_path <- paste("./",directory,sep="")
#print(dir(my_path, pattern="*.csv"))
# loop through the files
for(f in dir(my_path, pattern="*.csv")){
full_file <- paste(my_path,"/",f,sep="")
ob_data <- read.csv(full_file, header = TRUE)
if(sum(complete.cases(ob_data)) > threshold){
# c_cases <- rbind(c_cases,full_file)
c_cases <- c(c_cases, cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
#print(cor(ob_data$sulfate,ob_data$nitrate,use="complete.obs"))
}
}
c_cases
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete <- function(directory="specdata", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# build the file list from the id string
c_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# intialize the data frame
c_cases = data.frame()
# loop through the files
for(i in 1:length(c_files)){
nobs_data <- read.csv(c_files[i], header = TRUE)
# build the frame
if(length(c_cases)==0){
c_cases <- cbind(id = id[i],nobs = sum(complete.cases(nobs_data)))
} else {
c_cases <- rbind(c_cases, c(id[i],sum(complete.cases(nobs_data))))
}
}
c_cases
}
submit()
submit()
submit()
submit()
pollutantmean("specdata", "sulfate", 1:10)
debugSource('~/Google Drive/School/Coursera/R Programming/Week 2/Assignment/RProg_W2A1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
mean(m_values)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values,mean(m_data[,pollutant],na.rm=TRUE))
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "sulfate", 1:10)
submit()
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values,mean(m_data$pollutant,na.rm=TRUE))
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values,mean(m_data[,pollutant],na.rm=TRUE))
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
debugSource('~/Google Drive/School/Coursera/R Programming/Week 2/Assignment/RProg_W2A1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
m_data$sulfate
mean(m_data$sulfate,na.rm = TRUE)
pollutantmean("specdata", "sulfate", 1:2)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 70)
pollutantmean("specdata", "sulfate", 71)
pollutantmean("specdata", "sulfate", 70)
pollutantmean("specdata", "sulfate", 71)
pollutantmean("specdata", "sulfate", 72)
mean(1.784347,0.5878678,1.016693)
pollutantmean("specdata", "nitrate", 70)
pollutantmean("specdata", "nitrate", 71)
pollutantmean("specdata", "nitrate", 72)
mean(0.2551667,1.431601,2.363205)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values, mdata[,pollutant])
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "nitrate", 72)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values, m_data[,pollutant])
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "nitrate", 72)
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values, m_data[,pollutant])
}
# return the mean data
mean(m_values)
}
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values, m_data[,pollutant])
}
# return the mean data
mean(m_values)
}
pollutantmean("specdata", "nitrate", 23)
debugSource('~/Google Drive/School/Coursera/R Programming/Week 2/Assignment/RProg_W2A1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
m_values
pollutantmean <- function(directory="specdata", pollutant, id=1:332) {
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbersa
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# build the file list from the id string
m_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# initialize the mean values vector
m_values <- vector()
# loop through the monitor files; read the csv and caculate the mean
for(f in m_files) {
m_data <- read.csv(f, header = TRUE)
m_values <- c(m_values, m_data[,pollutant])
}
# return the mean data
mean(m_values, na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
submit()
submit()
submit()
submit()
submit()
complete <- function(directory="specdata", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# build the file list from the id string
c_files <- paste("./",directory,"/",sprintf("%03d",id),".csv",sep="")
# intialize the data frame
c_cases = data.frame()
# loop through the files
for(i in 1:length(c_files)){
nobs_data <- read.csv(c_files[i], header = TRUE)
# build the frame
if(length(c_cases)==0){
c_cases <- cbind(id = id[i],nobs = sum(complete.cases(nobs_data)))
} else {
c_cases <- rbind(c_cases, c(id[i],sum(complete.cases(nobs_data))))
}
}
as.data.frame(c_cases)
}
submit()
submit()
